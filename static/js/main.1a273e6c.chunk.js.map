{"version":3,"sources":["config.js","components/Layout/Layout.js","components/Tweet/Tweet.js","components/Form/anger.svg","components/Form/disgusted.svg","components/Form/fear.svg","components/Form/guilt.svg","components/Form/happiness.svg","components/Form/sad.svg","components/Form/shame.svg","components/Form/Form.js","components/Form/neutral.svg","components/App/App.js","reportWebVitals.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","cookieKey","skippedKey","Copyright","Typography","variant","color","align","Link","href","style","fontSize","title","useStyles","makeStyles","theme","appBar","position","layout","width","marginLeft","spacing","marginRight","breakpoints","up","paper","marginTop","marginBottom","padding","Layout","children","classes","useCookies","annotations","Fragment","CssBaseline","AppBar","className","Toolbar","noWrap","length","Paper","card","backgroundColor","Tweet","tweetContent","Grid","item","xs","Card","CardContent","labels","id","label","icon","hapIcon","fearIcon","angIcon","sadIcon","disIcon","shamIcon","guiltIcon","buttons","display","justifyContent","buttonContainer","margin","button","labelIcon","height","path","cookieAge","idKey","Form","useState","settingSkip","setSettingSkip","cookies","setCookies","skipped","nanoid","maxAge","useEffect","container","orderByKey","d","value","selectedTweets","filter","tweet","includes","selectedTweetId","Math","floor","random","tweetIndex","findIndex","map","type","runMutation","alignContent","justify","alignItems","Button","onClick","a","annotatedBy","key","src","handleSkip","App","firebase","CookiesProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a273e6c.chunk.js","sourcesContent":["// Firebase Config\nexport const config = {\n  apiKey: \"AIzaSyAoAangmjRhPmpGj9TZ9EpAZJYqxpTCVH4\",\n  authDomain: \"tweet-annotator-7b789.firebaseapp.com\",\n  databaseURL: \"https://tweet-annotator-7b789.firebaseio.com\",\n  projectId: \"tweet-annotator-7b789\",\n  storageBucket: \"tweet-annotator-7b789.appspot.com\",\n  messagingSenderId: \"1057840760122\",\n  appId: \"1:1057840760122:web:c036eba1a841db18e7bc03\"\n};\nexport const cookieKey = \"annotatedTweets\";\nexport const skippedKey = \"skippedTweets\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useCookies } from \"react-cookie\";\nimport {cookieKey} from \"../../config\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Built with React and Material UI for \"}\n      <Link color=\"inherit\" href=\"https://pwr.edu.pl/en/\">\n        <b>WUST</b>\n      </Link>{\" \"}\n      {\".\"}<br/><span style={{fontSize: 10}}>\n      {\"Icons made by \"}\n      <Link href=\"https://www.flaticon.com/authors/freepik\" color=\"inherit\" title=\"Freepik\">Freepik</Link>\n      {\" from \"}\n      <Link href=\"https://www.flaticon.com/\" color=\"inherit\" title=\"Flaticon\">www.flaticon.com</Link></span>\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 1000,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n}));\n\nexport default function Layout({ children }) {\n  const classes = useStyles();\n  const [cookies] = useCookies([cookieKey]);\n\n  const annotations = cookies[cookieKey] || []\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Tweet annotator v1.0\n          </Typography>\n          <span style={{'flex': 1}} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            You've annotated: <b style={{color: 'blue'}}>{annotations.length} tweets</b>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <React.Fragment>{children}</React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    backgroundColor: 'rgba(29, 161, 242, 0.1)'\n  },\n}));\n\nexport default function Tweet({ tweetContent = \"\" }) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography>{tweetContent}</Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/anger.8528d165.svg\";","export default __webpack_public_path__ + \"static/media/disgusted.0f4f8fc2.svg\";","export default __webpack_public_path__ + \"static/media/fear.2470cbbc.svg\";","export default __webpack_public_path__ + \"static/media/guilt.90a5c032.svg\";","export default __webpack_public_path__ + \"static/media/happiness.4e02f678.svg\";","export default __webpack_public_path__ + \"static/media/sad.2f887896.svg\";","export default __webpack_public_path__ + \"static/media/shame.12d88091.svg\";","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  FirebaseDatabaseMutation,\n  FirebaseDatabaseNode,\n} from \"@react-firebase/database\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { useCookies } from \"react-cookie\";\nimport { nanoid } from \"nanoid\";\nimport Tweet from \"../Tweet/Tweet\";\nimport angIcon from \"./anger.svg\";\nimport disIcon from \"./disgusted.svg\";\nimport fearIcon from \"./fear.svg\";\nimport guiltIcon from \"./guilt.svg\";\nimport hapIcon from \"./happiness.svg\";\nimport sadIcon from \"./sad.svg\";\nimport shamIcon from \"./shame.svg\";\nimport neutIcon from \"./neutral.svg\";\nimport { cookieKey, skippedKey } from \"../../config\";\n\nconst labels = [\n  {\n    id: \"joy\",\n    label: \"Joy\",\n    icon: hapIcon,\n  },\n  {\n    id: \"fear\",\n    label: \"Fear\",\n    icon: fearIcon,\n  },\n  {\n    id: \"anger\",\n    label: \"Anger\",\n    icon: angIcon,\n  },\n  {\n    id: \"neutral\",\n    label: \"Neutral\",\n    icon: neutIcon,\n  },\n  {\n    id: \"sadness\",\n    label: \"Sadness\",\n    icon: sadIcon,\n  },\n  {\n    id: \"disgust\",\n    label: \"Disgust\",\n    icon: disIcon,\n  },\n  {\n    id: \"shame\",\n    label: \"Shame\",\n    icon: shamIcon,\n  },\n  {\n    id: \"guilt\",\n    label: \"Guilt\",\n    icon: guiltIcon,\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  buttonContainer: {\n    margin: \"auto\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n    fontSize: \"1rem\",\n  },\n  labelIcon: {\n    height: theme.spacing(6),\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst path = \"tweets/\";\nconst cookieAge = 60 * 60 * 24 * 365; //year\nconst idKey = \"userId\";\n\nexport default function Form() {\n  const classes = useStyles();\n  const [settingSkip, setSettingSkip] = useState(null);\n  const [cookies, setCookies] = useCookies([cookieKey, idKey, skippedKey]);\n\n  const annotations = cookies[cookieKey] || [];\n  const skipped = cookies[skippedKey] || [];\n\n  if (cookies[idKey] == null) {\n    setCookies(idKey, nanoid(), { maxAge: cookieAge });\n  }\n\n  useEffect(() => {\n    if (settingSkip != null) {\n      setCookies(skippedKey, [...skipped, settingSkip], { maxAge: cookieAge });\n      setSettingSkip(null);\n    }\n  }, [settingSkip]);\n\n  const handleSkip = (tweet) => {\n    setSettingSkip(tweet.id);\n  };\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        {settingSkip == null && (\n          <FirebaseDatabaseNode path={path} orderByKey annotations skipped>\n            {(d) => {\n              if (!d.value) {\n                return null;\n              }\n              let selectedTweets = d.value.filter(\n                (tweet) =>\n                  !annotations.includes(tweet.id) && !skipped.includes(tweet.id)\n              );\n              const selectedTweetId =\n                selectedTweets[\n                  Math.floor(Math.random() * selectedTweets.length)\n                ].id;\n              const tweetIndex = d.value.findIndex(\n                (tweet) => tweet.id === selectedTweetId\n              );\n              return (\n                cookies[idKey] &&\n                d.value != null &&\n                [d.value[tweetIndex]].map((tweet) => (\n                  <React.Fragment key={tweet.id}>\n                    <Grid item xs={12}>\n                      <Tweet tweetContent={tweet.tweet} />\n                    </Grid>\n                    {tweet && (\n                      <FirebaseDatabaseMutation\n                        type=\"update\"\n                        path={path + `${tweetIndex}/`}\n                      >\n                        {({ runMutation }) => {\n                          return (\n                            <Grid\n                              container\n                              alignContent=\"center\"\n                              justify=\"center\"\n                              alignItems=\"center\"\n                              className={classes.buttonContainer}\n                            >\n                              {labels.map((label) => (\n                                <Button\n                                  key={label.id}\n                                  // variant=\"contained\"\n                                  variant=\"outlined\"\n                                  color=\"secondary\"\n                                  className={classes.button}\n                                  onClick={async () => {\n                                    setCookies(\n                                      cookieKey,\n                                      [...annotations, tweet.id],\n                                      { maxAge: cookieAge }\n                                    );\n                                    const { key } = await runMutation({\n                                      ...tweet,\n                                      annotations: [\n                                        ...(tweet\n                                          ? tweet.annotations || []\n                                          : []),\n                                        label.id,\n                                      ],\n                                      annotatedBy: [\n                                        ...(tweet\n                                          ? tweet.annotatedBy || []\n                                          : []),\n                                        cookies[idKey],\n                                      ],\n                                    });\n                                  }}\n                                >\n                                  <img\n                                    className={classes.labelIcon}\n                                    src={label.icon}\n                                  />\n                                  {label.label}\n                                </Button>\n                              ))}\n                            </Grid>\n                          );\n                        }}\n                      </FirebaseDatabaseMutation>\n                    )}\n                    <div className={classes.buttons}>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => handleSkip(tweet)}\n                        className={classes.button}\n                      >\n                        {\"Skip :(\"}\n                      </Button>\n                    </div>\n                  </React.Fragment>\n                ))\n              );\n            }}\n          </FirebaseDatabaseNode>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/neutral.5623396f.svg\";","import React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport {\n  FirebaseDatabaseProvider,\n  FirebaseDatabaseNode,\n} from \"@react-firebase/database\";\nimport Button from \"@material-ui/core/Button\";\nimport { CookiesProvider } from \"react-cookie\";\n\nimport { config } from \"../../config\";\nimport Layout from \"../Layout/Layout\";\nimport Form from \"../Form/Form\";\n\nfunction App() {\n  return (\n    <FirebaseDatabaseProvider firebase={firebase} {...config}>\n      <CookiesProvider>\n        <Layout>\n          <Form />\n        </Layout>\n      </CookiesProvider>\n    </FirebaseDatabaseProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}